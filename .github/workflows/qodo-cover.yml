name: qodo-cover.yml

on:
  pull_request:
    branches:
      - main
      - dev
    types:
      - opened  # Trigger when a pull request is opened

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Install system dependencies
      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-dev build-essential

      - name: Cache Conda Environment
        uses: actions/cache@v4
        with:
          path: ~/.conda/envs
          key: ${{ runner.os }}-conda-${{ hashFiles('environment.yml') }}
          restore-keys: |
                  ${{ runner.os }}-conda-

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: "3.11.2"  # Ensure this matches your project's Python version
          auto-update-conda: true

      - name: Create and Activate Conda Environment
        shell: bash -l {0}
        run: |
          conda env update -f environment.yml --prune && source activate metabot
  
      - name: Cache pip Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Additional Dependencies
        shell: bash -l {0}
        run: |
          pip install -r requirements.txt  # If you have additional requirements
          
      - name: Run Qodo Cover Agents
        uses: qodo-ai/qodo-ci/.github/actions/qodo-cover@v0.1.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          project_language: python
          project_root: .  # Set the project root to app/core/agents
          code_coverage_report_path: ./coverage_agents_factory.xml
          test_command: "pytest --cov=app/core/agents --cov-report=xml --cov-report=term tests/app/core/agents/agents/tests/test_agents.py"  # Adjust test command to point to app/core/tests
          model: anthropic/claude-3-5-sonnet-latest
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          CLAUDE_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Run Qodo Cover for utils
        uses: qodo-ai/qodo-ci/.github/actions/qodo-cover@v0.1.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          project_language: python
          project_root: .  # Set the project root to app/core/interpreter
          code_coverage_report_path: ./coverage_interpreter.xml
          test_command: "pytest --cov=app/core/utils.py --cov-report=xml --cov-report=term tests/app/core/tests/test_utils.py"
          model: anthropic/claude-3-5-sonnet-latest
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          CLAUDE_KEY: ${{ secrets.CLAUDE_KEY }}
