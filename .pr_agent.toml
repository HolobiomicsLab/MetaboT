[huggingface]
key = "${{ secrets.HUGGINGFACE_KEY }}"
api_base = "https://huggingface.co/api/inference-proxy/together"

[anthropic]
key = "${{ secrets.CLAUDE_KEY }}"

[mistral]
#key = "${{ secrets.CODESTRAL_KEY }}"  # Add your Mistral API key here if required
#api_base = "https://codestral.mistral.ai/v1/chat/completions"
#key = "${{ secrets.MISTRAL_KEY }}" 
#api_base = "https://api.mistral.ai/v1"  # Use the correct Mistral API endpoint

[litellm] 
enable_callbacks = true
success_callback = ["langsmith"]
failure_callback = ["langsmith"]
service_callback = []
#litellm.set_verbose = true 
#drop_params = true   # IMPORTANT!!!!! FOR ANTHROPIC/CLAUD MODELS TO SET TO true

[config]
model = "gpt-3o-mini"
fallback_models = ["gpt-4o"]  # Define a fallback model
model_weak = "gpt-4o-mini" # optional, a weaker model to use for some easier tasks

#model = "huggingface/deepseek-ai/DeepSeek-R1"
#fallback_models = ["huggingface/deepseek-ai/DeepSeek-R1-Distill-Llama-70B"]
#model_weak = "huggingface/Qwen/Qwen2.5-Coder-32B-Instruct"
#fallback_models = ["gpt-o3-mini"]
#model_weak = "gpt-4o-mini" # optional, a weaker model to use for some easier tasks
#fallback_models = ["huggingface/deepseek-ai/DeepSeek-R1-Distill-Qwen-32B"]
#model_weak = "huggingface/deepseek-ai/DeepSeek-R1-Distill-Qwen-32B" # optional, a weaker model to use for some easier tasks

#model = "mistral/codestral-latest"
#fallback_models = ["mistral/codestral-latest"]
#model_weak = "mistral/codestral-latest" # optional, a weaker model to use for some easier tasks

#model = "mistral/mistral-large-latest"
#fallback_models = ["mistral/mistral-large-latest"]
#model_weak = "mistral/mistral-large-latest" # optional, a weaker model to use for some easier tasks

#ANTHROPIC DOES NOT WORK WELL ....
#model = "anthropic/claude-3-5-sonnet-20241022"  # Main model
#fallback_models = ["anthropic/claude-3-5-haiku-20241022"]  # Fallback model
#model_weak = "anthropic/claude-3-5-haiku-20241022"  # Weak model for lightweight tasks

# token limits
custom_model_max_tokens= 128000
max_description_tokens = 8000
max_commits_tokens = 16000
max_model_tokens = 100000 # Limits the maximum number of tokens that can be used by any model, regardless of the model's default capabilities.

# CLI
git_provider="github"
publish_output=true
publish_output_progress=true
publish_output_no_suggestions=true
verbosity_level=0 # 0,1,2
use_extra_bad_extensions=false
# Configurations
use_wiki_settings_file=true
use_repo_settings_file=true
use_global_settings_file=true
disable_auto_feedback = false
ai_timeout=120 # 2minutes
skip_keys = []


# patch extension logic
patch_extension_skip_types =[".md",".txt"]
allow_dynamic_context=true
max_extra_lines_before_dynamic_context = 8 # will try to include up to 10 extra lines before the hunk in the patch, until we reach an enclosing function or class
patch_extra_lines_before = 3 # Number of extra lines (+3 default ones) to include before each hunk in the patch
patch_extra_lines_after = 1 # Number of extra lines (+3 default ones) to include after each hunk in the patch
secret_provider=""
cli_mode=false
ai_disclaimer_title=""  # Pro feature, title for a collapsible disclaimer to AI outputs
ai_disclaimer=""  # Pro feature, full text for the AI disclaimer
output_relevant_configurations=false
large_patch_policy = "clip" # "clip", "skip"
duplicate_prompt_examples = false
# seed
seed=-1 # set positive value to fix the seed (and ensure temperature=0)
temperature=0.1
# ignore logic
ignore_pr_title = ["^\\[Auto\\]", "^Auto"] # a list of regular expressions to match against the PR title to ignore the PR agent
ignore_pr_target_branches = [] # a list of regular expressions of target branches to ignore from PR agent when an PR is created
ignore_pr_source_branches = [] # a list of regular expressions of source branches to ignore from PR agent when an PR is created
ignore_pr_labels = [] # labels to ignore from PR agent when an PR is created
ignore_pr_authors = [] # authors to ignore from PR agent when an PR is created
#
is_auto_command = false # will be auto-set to true if the command is triggered by an automation
enable_ai_metadata = false # will enable adding ai metadata

ignore_pr_branches = ["main-to-dev"]
ignore_pr_folders = ["docs/"]
ignore_pr_users = ["dependabot[bot]"]

[pr_reviewer] # /review #
# enable/disable features
require_score_review=false
require_tests_review=true
require_estimate_effort_to_review=true
require_can_be_split_review=false
require_security_review=true
require_ticket_analysis_review=true
# general options
persistent_comment=true
extra_instructions = ""
final_update_message = true
# review labels
enable_review_labels_security=true
enable_review_labels_effort=true
# specific configurations for incremental review (/review -i)
require_all_thresholds_for_incremental_review=false
minimal_commits_for_incremental_review=0
minimal_minutes_for_incremental_review=0
enable_intro_text=true
enable_help_text=false # Determines whether to include help text in the PR review. Enabled by default.
# auto approval
enable_auto_approval=false

[pr_description] # /describe #
publish_labels=false
add_original_user_description=true
generate_ai_title=false
use_bullet_points=true
extra_instructions = ""
enable_pr_type=true
final_update_message = true
enable_help_text=false
enable_help_comment=true
# describe as comment
publish_description_as_comment=false
publish_description_as_comment_persistent=true
## changes walkthrough section
enable_semantic_files_types=true
collapsible_file_list='adaptive' # true, false, 'adaptive'
collapsible_file_list_threshold=8
inline_file_summary=false # false, true, 'table'
# markers
use_description_markers=false
include_generated_by_header=true
# large pr mode ðŸ’Ž
#enable_large_pr_handling=true
#max_ai_calls=4
#async_ai_calls=true
#custom_labels = ['Bug fix', 'Tests', 'Bug fix with tests', 'Enhancement', 'Documentation', 'Other']

[pr_questions] # /ask #
enable_help_text=false

[pr_code_suggestions] # /improve #
max_context_tokens=32000
#
commitable_code_suggestions = false
dual_publishing_score_threshold=-1 # -1 to disable, [0-10] to set the threshold (>=) for publishing a code suggestion both in a table and as commitable
focus_only_on_problems=true
#
extra_instructions = ""
enable_help_text=false
enable_chat_text=false
enable_intro_text=true
persistent_comment=true
max_history_len=4
# enable to apply suggestion ðŸ’Ž
#apply_suggestions_checkbox=true
# suggestions scoring
suggestions_score_threshold=0 # [0-10]| recommend not to set this value above 8, since above it may clip highly relevant suggestions
new_score_mechanism=true
new_score_mechanism_th_high=9
new_score_mechanism_th_medium=7
# params for '/improve --extended' mode
auto_extended_mode=true
num_code_suggestions_per_chunk=4
max_number_of_calls = 3
parallel_calls = true

final_clip_factor = 0.8
# self-review checkbox
demand_code_suggestions_self_review=false # add a checkbox for the author to self-review the code suggestions
code_suggestions_self_review_text= "**Author self-review**: I have reviewed the PR code suggestions, and addressed the relevant ones."
approve_pr_on_self_review=false # Pro feature. if true, the PR will be auto-approved after the author clicks on the self-review checkbox
fold_suggestions_on_self_review=true # Pro feature. if true, the code suggestions will be folded after the author clicks on the self-review checkbox
# Suggestion impact ðŸ’Ž
#publish_post_process_suggestion_impact=true
#wiki_page_accepted_suggestions=true
#allow_thumbs_up_down=false

[pr_add_docs]
docs_style = "Format and utilize the Google Docstring Format for all documentation."

[pr_update_changelog] # /update_changelog #
push_changelog_changes=false
extra_instructions = ""
add_pr_link=true

[pr_analyze] # /analyze #
enable_help_text=true

[pr_test] # /test #
extra_instructions = ""
testing_framework = "" # specify the testing framework you want to use
num_tests=3            # number of tests to generate. max 5.
avoid_mocks=true       # if true, the generated tests will prefer to use real objects instead of mocks
file = ""              # in case there are several components with the same name, you can specify the relevant file
class_name = ""        # in case there are several methods with the same name in the same file, you can specify the relevant class name
enable_help_text=false


[pr_improve_component] # /improve_component #
num_code_suggestions=4
extra_instructions = ""
file = ""              # in case there are several components with the same name, you can specify the relevant file
class_name = ""        # in case there are several methods with the same name in the same file, you can specify the relevant class name

[pr_help] # /help #
force_local_db=false
num_retrieved_snippets=5

[best_practices]
content = ""
organization_name = ""
max_lines_allowed = 800
enable_global_best_practices = false

[auto_best_practices]
enable_auto_best_practices = true # public - general flag to disable all auto best practices usage
utilize_auto_best_practices = true # public - disable usage of auto best practices in the 'improve' tool
extra_instructions = "" # public - extra instructions to the auto best practices generation prompt
content = ""
max_patterns = 5 # max number of patterns to be detected

[ignore]
glob = ["deprecated/*", "app/notebooks/*"]
regex = ["^docs/", ".*\\.ttl$", ".*\\.ipynb$", ".*\\.pkl$", ".*\\.txt$", ".*\\.lock$", ".*\\.json$", ".*\\.yaml$", ".*\\.csv$",".*\\.txt$"]
